package api_test

import (
	"github.com/rethmint/revm-api/api"
	types "github.com/rethmint/revm-api/types"
	"testing"
)

func TestJsonFFI(t *testing.T) {
	tx := api.MockTx{
		From:  "0xabc",
		To:    "0xdef",
		Value: "1000",
	}

	api.Json_ffi(tx)
}

// evm  suite test case for contract deployment
func TestExecuteTx(t *testing.T) {
	store := api.NewRevmKVStore()
	vm := api.InitVM()

	tx := types.Transaction{
		Caller:   types.AccountAddress{0xe1, 0x00, 0x71, 0x3f, 0xc1, 0x54, 0x00, 0xd1, 0xe9, 0x40, 0x96, 0xa5, 0x45, 0x87, 0x9e, 0x7c, 0x64, 0x70, 0x01, 0xe0},
		GasLimit: 0xf4240,
		GasPrice: types.U256{
			0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		TransactTo:     types.Call,
		Value:          types.U256{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		Data:           []byte("0x60fe60005360016000f3"),
		Nonce:          1,
		ChainId:        1,
		GasPriorityFee: types.U256{0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x3e8
	}

	block := types.Block{
		Number:    types.U256{0x1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		Coinbase:  types.AccountAddress{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
		Timestamp: types.U256{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		GasLimit:  0xf4240,
		Basefee:   types.U256{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	}

	api.ExecuteTx(vm, store, tx, block)
}
